buildscript {
    ext.kotlin_version = '1.3.20'
    ext.serialization_version = '0.9.1'
    ext.web_path = 'web'

    repositories {
        jcenter()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id "com.jfrog.bintray" version "1.8.4"
}

apply plugin: "kotlin2js"
apply plugin: 'maven-publish'

group = 'de.westermann'
version = '0.1.0'

repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-js:$kotlin_version"
    implementation "de.westermann:KObserve-js:0.7.0"
}

clean.doFirst() {
    delete("${web_path}/website")
    delete("${web_path}/node_modules")
    delete("${web_path}/package-lock.json")
    delete("out")
}

compileKotlin2Js {
    kotlinOptions.sourceMap = true
    kotlinOptions.sourceMapEmbedSources = "always"
    kotlinOptions.moduleKind = "umd"
}

jar {
    includeEmptyDirs = false

    from {
        configurations.compileClasspath.collect {
            if (it.exists()) {
                ((it.isDirectory() || !it.exists()) ? it : zipTree(it)).getFiles().findAll {
                    it.name ==~ "^[a-zA-Z|-]+.js(.map)?\$"
                }
            } else {
                ArrayList
            }
        }
    }

    exclude "**/*.kjsm", "**/META-INF/*", "META-INF/*", "**/*meta*"
    into "website"
}

build.doLast() {
    copy {
        File artifact = new File("build/libs/${project.name}-${project.version}.jar")
        includeEmptyDirs = false

        from zipTree(artifact)
        into "${web_path}"
        include { fileTreeElement ->
            def path = fileTreeElement.path
            !path.contains("META-INF") && !path.endsWith("sass")
        }
    }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    archiveClassifier = 'sources'
    excludes += "*.html"
    excludes += "stylesheets/*"
    excludes += "stylesheets"
    includeEmptyDirs = false
}

publishing {
    publications {
        js(MavenPublication) {
            pom {
                name = 'KWebView'
                description = ''
                url = 'https://github.com/pixix4/KWebView'
                licenses {
                    license {
                        name = 'MIT'
                        url = 'https://github.com/pixix4/KWebView/blob/master/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'pixix4'
                        name = 'Lars Westermann'
                        email = 'lars-westermann@live.de'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/pixix4/KWebView.git'
                    developerConnection = 'scm:git:ssh://github.com/pixix4/KWebView.git'
                    url = 'https://github.com/pixix4/KWebView'
                }
            }

            from components.java
            artifact sourcesJar
        }
    }
    repositories {
        maven {
            url = "$buildDir/repos/releases"
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')

    publications = ['js']

    pkg {
        repo = 'maven'
        name = 'KWebView'
        licenses = ['MIT']
        vcsUrl = 'https://github.com/pixix4/KWebView.git'


        version {
            name = project.version
            released  = new Date()
        }
    }
}
